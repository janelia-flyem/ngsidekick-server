[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ngsidekick-server"
version = "0.1.0"
description = "A Flask server for ngsidekick"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
dependencies = [
    "flask>=3.0.0",
    "flask-cors>=4.0.0",
    "flask-compress>=1.18,<2",
    "gunicorn>=21.2.0",
    "ngsidekick>=0.0.4,<0.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false


[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.dependencies]


[tool.pixi.pypi-dependencies]
ngsidekick-server = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.tasks]
